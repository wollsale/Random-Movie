{"mappings":"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","sources":["app.js"],"sourcesContent":["const movieContainer = document.getElementById('movie-container');\nconst apiKey = '05773e7f1aa8a05015f47526f696b1f0';\nlet fresh = false;\n\nfunction fetchLatestMovieId() {\n  const url = `https://api.themoviedb.org/3/movie/latest?api_key=${apiKey}`;\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      const latestMovieId = data.id;\n      return latestMovieId;\n    })\n    .catch(error => {\n      console.log(\"Erreur lors de la requête à l'API :\", error);\n      return null;\n    });\n}\n\nfunction fetchRandomMovie() {\n  return fetchLatestMovieId()\n    .then(latestMovieId => {\n      if (latestMovieId) {\n        const randomMovieId = Math.floor(Math.random() * latestMovieId) + 1;\n        const url = `https://api.themoviedb.org/3/movie/${randomMovieId}?api_key=${apiKey}`;\n\n        return fetch(url)\n          .then(response => response.json())\n          .then(data => {\n            const randomMovie = data;\n            return randomMovie;\n          });\n      } else {\n        return null;\n      }\n    });\n}\n\nfunction isValidMovie(movie) {\n  return (\n    movie.title &&\n    movie.release_date &&\n    movie.vote_average &&\n    movie.poster_path &&\n    movie.title !== \"undefined\" &&\n    movie.release_date !== \"undefined\" &&\n    movie.vote_average !== \"undefined\" &&\n    movie.poster_path !== \"undefined\"\n  );\n}\n\nfunction createMovieObject(movie) {\n  if (isValidMovie(movie)) {\n    const title = movie.title;\n    const originalTitle = movie.original_title;\n    const year = movie.release_date.split('-')[0];\n    const voteAverage = movie.vote_average;\n    const posterPath = movie.poster_path;\n    const trailer = getTrailerLink(movie.videos?.results);\n    const genres = getGenres(movie.genres);\n    const productionCountries = getProductionCountries(movie.production_countries);\n    const overview = movie.overview;\n\n    const movieObject = {\n      title: title,\n      originalTitle: originalTitle,\n      year: year,\n      voteAverage: voteAverage,\n      posterPath: posterPath,\n      trailer: trailer,\n      genres: genres,\n      productionCountries: productionCountries,\n      overview: overview\n    };\n\n    return movieObject;\n  } else {\n    return null;\n  }\n}\n\nfunction getTrailerLink(videos) {\n  const trailer = videos?.find(video => video.type === 'Trailer' && video.site === 'YouTube');\n  return trailer ? `https://www.youtube.com/watch?v=${trailer.key}` : '';\n}\n\nfunction getGenres(genres) {\n  return genres ? genres.map(genre => genre.name).join(', ') : '';\n}\n\nfunction getProductionCountries(countries) {\n  return countries ? countries.map(country => country.name).join(', ') : '';\n}\n\nfunction createMovieElement(movie) {\n  const movieElement = document.createElement('div');\n  movieElement.classList.add('movie');\n\n  const imageElement = document.createElement('div');\n  imageElement.classList.add('movie__image');\n\n  const posterElement = document.createElement('img');\n  posterElement.classList.add('movie__poster');\n  posterElement.alt = 'Affiche du film ' + movie.title;\n  posterElement.src = 'https://image.tmdb.org/t/p/w500' + movie.posterPath;\n  imageElement.appendChild(posterElement);\n\n  const contentElement = document.createElement('div');\n  contentElement.classList.add('movie__content');\n\n  const titleElement = document.createElement('h2');\n  titleElement.classList.add('movie__title');\n  titleElement.textContent = movie.title;\n  contentElement.appendChild(titleElement);\n\n  if (movie.originalTitle && movie.originalTitle !== movie.title) {\n    const originalTitleElement = document.createElement('h3');\n    originalTitleElement.classList.add('movie__original-title');\n    originalTitleElement.textContent = movie.originalTitle;\n    contentElement.appendChild(originalTitleElement);\n  }\n\n  const infoListElement = document.createElement('ul');\n  infoListElement.classList.add('movie__info-list');\n\n  if (movie.year) {\n    const yearElement = document.createElement('li');\n    yearElement.classList.add('movie__year');\n    yearElement.textContent = movie.year;\n    infoListElement.appendChild(yearElement);\n  }\n\n  if (movie.voteAverage) {\n    const voteAverageElement = document.createElement('li');\n    voteAverageElement.classList.add('movie__vote-average');\n    voteAverageElement.textContent = movie.voteAverage;\n    infoListElement.appendChild(voteAverageElement);\n  }\n\n  if (movie.genres) {\n    const genresElement = document.createElement('li');\n    genresElement.classList.add('movie__genres');\n    genresElement.textContent = movie.genres;\n    infoListElement.appendChild(genresElement);\n  }\n\n  if (movie.productionCountries) {\n    const productionCountriesElement = document.createElement('li');\n    productionCountriesElement.classList.add('movie__production-countries');\n    productionCountriesElement.textContent = movie.productionCountries;\n    infoListElement.appendChild(productionCountriesElement);\n  }\n\n  contentElement.appendChild(infoListElement);\n\n  if (movie.overview) {\n    const overviewElement = document.createElement('p');\n    overviewElement.classList.add('movie__overview');\n    overviewElement.textContent = movie.overview;\n    contentElement.appendChild(overviewElement);\n  }\n\n  if (movie.trailer) {\n    const trailerLinkElement = document.createElement('a');\n    trailerLinkElement.classList.add('movie__trailer-link');\n    trailerLinkElement.href = movie.trailer;\n    trailerLinkElement.textContent = 'Bande annonce';\n    contentElement.appendChild(trailerLinkElement);\n  }\n\n  movieElement.appendChild(imageElement);\n  movieElement.appendChild(contentElement);\n\n  return movieElement;\n}\n\nfunction displayMovieInfo(movie) {\n  movieContainer.innerHTML = '';\n\n  if (movie) {\n    const movieElement = createMovieElement(movie);\n    movieContainer.appendChild(movieElement);\n  } else {\n    fetchRandomMovie()\n      .then(movie => {\n        const movieObject = createMovieObject(movie);\n        displayMovieInfo(movieObject);\n      })\n      .catch(error => {\n        console.log(\"Erreur lors de la récupération du film aléatoire :\", error);\n      });\n  }\n}\n\n// TRIGGER\n\n// if (fresh = false) {\n//   console.log('fresh')\n\n//   fetchRandomMovie()\n//     .then(movie => {\n//       const movieObject = createMovieObject(movie);\n//       displayMovieInfo(movieObject);\n//     })\n//     .catch(error => {\n//       console.log(\"Erreur lors de la récupération du film aléatoire :\", error);\n//   });\n// }\n\ndocument.querySelector('button').addEventListener('click', (e) => {\n  e.preventDefault();\n  fresh = true;\n  fetchRandomMovie()\n    .then(movie => {\n      const movieObject = createMovieObject(movie);\n      displayMovieInfo(movieObject);\n    })\n    .catch(error => {\n      console.log(\"Erreur lors de la récupération du film aléatoire :\", error);\n    });\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (event.code === 'Space') {\n    e.preventDefault();\n    fresh = true;\n    fetchRandomMovie()\n      .then(movie => {\n        const movieObject = createMovieObject(movie);\n        displayMovieInfo(movieObject);\n      })\n      .catch(error => {\n        console.log(\"Erreur lors de la récupération du film aléatoire :\", error);\n      });\n  }\n});\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}